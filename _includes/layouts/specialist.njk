---
layout: layouts/base.njk
templateClass: tmpl-specialist
---
<!-- Если у шапки сайта есть фон, добавляем .hero--bg, и путь к картинке в style -->
<div class="hero hero--bg hero--specialist" style="background-image: url('{{ ('/static/img/'+img) | url }}');">
  <div class="container">
    <h1 class="hero__title">{{ title }}</h1>
  </div>
</div>
<div class="container specialist__body">
  <div class="specialist__tags">
    <p class="specialist__job">{{ job }}</p>
    <p class="specialist__description">{{ description }}</p>
  </div>
  <div class="specialist__calendar">
    {% include 'calendar.njk' %}
  </div>
  <div class="specialist__content">
    <h2 class="specialist__heading">О специалисте</h2>
    <p class="specialist__description">{{ about }}</p>
    <div class="specialist__banner">
      <h2 class="specialist__heading">{{ whom }}</h2>
      <p class="specialist__description">{{ paragraph }}</p>
    </div>
    <h2 class="specialist__heading">C чем поможет?</h2>
    <h2 class="specialist__heading">C чем не поможет?</h2>

    <h2 class="specialist__heading specialist__heading--big">Отзывы о работе</h2>
    <div class="js-tabs container">
      <ul class="js-tablist" data-hx="h2">
        <li class="js-tablist__item">
          <a href="#offline" class="js-tablist__link">Рукописные (40)</a>
        </li>
        <li class="js-tablist__item">
          <a href="#online" class="js-tablist__link">В интернете</a>
        </li>
      </ul>
      <div id="offline" class="js-tabcontent">
        <h2 class="invisible">Отзывы, оставленные в клиниках</h2>
        <ul class="feedback__offline">
          {%- for entry in metadata.offlineFeedback %}
            <li class="feedback__offline_item">
              <a class="feedback__offline_link" href="{{ entry.img | url }}" aria-expanded="false">
                <img class="feedback__offline_img" src="{{ entry.img | url }}" alt="Фотография отзыва." width="64" height="88">
              </a>
              <div class="feedback__offline_info">
                <h3 class="feedback__offline_title">{{ entry.title }}</h3>
                <dl class="feedback__offline_description">
                  <dt class="feedback__offline_heading">Жалобы</dt>
                  <dd class="feedback__offline_text">{{ entry.complaints }}</dd>
                  <dt class="feedback__offline_heading">Отзыв клиента</dt>
                  <dd class="feedback__offline_text feedback__offline_text--collapsed"><span>{{ entry.text }}</span></dd>
                </dl>
                <button class="btn--text feedback__expand" type="button">Читать полностью</button>
              </div>
            </li>
          {%- endfor %}
        </ul>
      </div>
      <div id="online" class="js-tabcontent">
        <h2 class="js-tabcontent__heading">Рейтинг на независимых порталах</h2>
        Здесь будут онлайн-отзывы
      </div>
    </div>
    <h2 class="specialist__heading specialist__heading--big">Дипломы и сертификаты</h2>
  </div>
</div>
<div class="container">
  <h2 class="specialist__heading specialist__heading--big">Похожие специалисты</h2>
  <ul class="specialists">
    {% for specialist in collections.specialists %}
      <li class="specialists__item">
        <a class="specialists__item_hero" style="background-image: url({{ ('/static/img/'+specialist.data.img) | url }});" href="{{ specialist.url | url }}">
          <span class="specialists__item_title">{{ specialist.data.title }}</span>
        </a>
      </li>
    {% endfor %}
  </ul>
</div>
<!-- На страницах с вкладками подключаем van11y-accessible-tab-panel-aria -->
<script src="{{ '/static/js/van11y-accessible-tab-panel-aria.min.js' | url }}"></script>
<script>
  // Оживляем просмотр отзывов
  const feedbackLinks = document.getElementsByClassName('feedback__offline_link');
  for (let i = 0; i < feedbackLinks.length; i++) {
    feedbackLinks[i].addEventListener('click', function (e) {
      e.preventDefault();
      e.currentTarget.setAttribute('aria-expanded', (e.currentTarget.getAttribute('aria-expanded') === 'false'));
    })
  }
  // Оживляем кнопки Читать полностью
  const expandBtns = document.getElementsByClassName('feedback__expand');
  for (let i = 0; i < expandBtns.length; i++) {
    expandBtns[i].addEventListener('click', function (e) {
      e.currentTarget.hidden = true;
      e.currentTarget.parentElement.querySelector('.feedback__offline_text--collapsed').classList.remove('feedback__offline_text--collapsed');
    })
  }
</script>
